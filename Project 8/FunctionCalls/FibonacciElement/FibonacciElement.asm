//Bootstrap code
@256
D=A
@SP
M=D
@Sys.init
0; JMP
//D:\Users\muril\OneDrive\Documentos\UFU\6_semestre\ESC\projetos\Project 8\FunctionCalls\FibonacciElement\FibonacciElement.asm
//FUNCTION Main.fibonacci 0
(Main.fibonacci)
//PUSH argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@TRUE_0
D; JLT
D=0
@CONTINUE_0
0; JMP
(TRUE_0)
D=-1
(CONTINUE_0)
@SP
A=M-1
M=D
//IF-GOTO IF_TRUE
@SP
AM=M-1
D=M
@IF_TRUE
D; JNE
//GOTO IF_FALSE
@IF_FALSE
0; JMP
//LABEL IF_TRUE
(IF_TRUE)
//PUSH argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
//RETURN
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
AM=M-1
D=M
@THAT
M=D
@endFrame
AM=M-1
D=M
@THIS
M=D
@endFrame
AM=M-1
D=M
@ARG
M=D
@endFrame
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0; JMP
//LABEL IF_FALSE
(IF_FALSE)
//PUSH argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@SP
A=M-1
M=D
//CALL Main.fibonacci 1
@Main$ret.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0; JMP
(Main$ret.1)
//PUSH argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
//PUSH constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D-M
@SP
A=M-1
M=D
//CALL Main.fibonacci 1
@Main$ret.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0; JMP
(Main$ret.2)
//add
@SP
M=M-1
A=M-1
D=M
@SP
A=M
D=D+M
@SP
A=M-1
M=D
//RETURN
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
AM=M-1
D=M
@THAT
M=D
@endFrame
AM=M-1
D=M
@THIS
M=D
@endFrame
AM=M-1
D=M
@ARG
M=D
@endFrame
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0; JMP
//D:\Users\muril\OneDrive\Documentos\UFU\6_semestre\ESC\projetos\Project 8\FunctionCalls\FibonacciElement\FibonacciElement.asm
//FUNCTION Sys.init 0
(Sys.init)
//PUSH constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//CALL Main.fibonacci 1
@Sys$ret.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@5
D=A
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0; JMP
(Sys$ret.1)
//LABEL WHILE
(WHILE)
//GOTO WHILE
@WHILE
0; JMP
